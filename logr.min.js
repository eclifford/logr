/*! logr.js - v0.1.0 - eclifford <ericgclifford@gmail.com> - 2014-09-25 */!function(a,b){"function"==typeof define&&define.amd?define([],function(){return a.Logr=b(a)}):"undefined"!=typeof exports?module.exports=b(a):a.Logr=b(a)}(this,function(){"use strict";function a(a){for(var b,c,d=1,e=arguments.length;e>d;d++){b=arguments[d];for(c in b)hasOwnProperty.call(b,c)&&(a[c]=b[c])}return a}var b={version:"0.1.0",logs:{},defaults:{level:1},levels:{DEBUG:1,INFO:2,WARN:3,ERROR:4,NONE:9},setLevel:function(a){if(!a||isNaN(a))throw Error("Logr.setLevel: provide a valid number for the level to set");for(var c in b.logs)b.logs[c].setLevel(a)},log:function(a,d){if(!a)throw Error("Logr.log: provide the name of the log to create or get");return b.logs[a]||(b.logs[a]=new c(a,d)),b.logs[a]}},c=function(c,d){if(!c)throw new Error("Logr.Log: logname is required");this.logname=c,d&&a(this,b.defaults,d)};return c.prototype.debug=function(a){this.getLevel()<=b.levels.DEBUG&&console.debug("["+this.logname+"] "+a,[].slice.call(arguments).splice(1,1))},c.prototype.info=function(a){this.getLevel()<=b.levels.INFO&&console.info("["+this.logname+"] "+a,[].slice.call(arguments).splice(1,1))},c.prototype.warn=function(a){this.getLevel()<=b.levels.WARN&&console.warn("["+this.logname+"] "+a,[].slice.call(arguments).splice(1,1))},c.prototype.error=function(a){this.getLevel()<=b.levels.ERROR&&console.error("["+this.logname+"] "+a,[].slice.call(arguments).splice(1,1))},c.prototype.setLevel=function(a){sessionStorage&&sessionStorage.setItem("logr:"+this.logname+":level",a)},c.prototype.getLevel=function(){return sessionStorage?sessionStorage.getItem("logr:"+this.logname+":level")||this.level:this.level},c.prototype.attach=function(a){var c,d,e=this;for(c in a)null!==a&&"[object Object]"===Object.prototype.toString.call(a[c])?this.attach(a[c]):"function"==typeof a[c]&&(d=a[c],a[c]=function(a,c){return function(){if(e.getLevel()<=b.levels.DEBUG){console.groupCollapsed("["+e.logname+"] "+a+"()",[].slice.call(arguments)),console.time("time");var d=c.apply(this,arguments);return d&&console.debug("return: ",d),console.timeEnd("time"),console.groupEnd(),d}return c.apply(this,arguments)}}(c,d))},b});